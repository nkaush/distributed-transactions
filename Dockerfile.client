FROM alpine:3.16 as build

WORKDIR /build

# update the Alpine package manager and install Rust and Cargo
RUN apk add --no-cache cargo musl-dev openssl-dev

# Copy over Cargo.toml files to the build directory
COPY tx-client/Cargo.toml tx-client/Cargo.toml
COPY tx-common/Cargo.toml tx-common/Cargo.toml
COPY tx-server/Cargo.toml tx-server/Cargo.toml
COPY Cargo.toml Cargo.toml

# Build all dependencies first
RUN mkdir -p tx-common/src/bin \
    && mkdir -p tx-server/src/bin \
    && mkdir -p tx-client/src/bin \
    && echo "fn main() {}" > tx-client/src/bin/dummy.rs \
    && echo "fn main() {}" > tx-common/src/bin/dummy.rs \
    && echo "fn main() {}" > tx-server/src/bin/dummy.rs \
    && cargo build --release \
    && rm -rf tx-common/src/ \
    && rm -rf tx-client/src/

# Then build the source
COPY tx-common/ tx-common/
COPY tx-client/ tx-client/

RUN cargo build --release --bin tx-client

FROM alpine:3.16 as server

WORKDIR /client

RUN apk add --no-cache libgcc

# Copy over server executable from the build stage
COPY --from=build /build/target/release/tx-client client

ENTRYPOINT [ "/bin/sh" ]